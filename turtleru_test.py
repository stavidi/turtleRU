# -*- coding: utf-8 -*-
# чтобы можно было писать русские буквы и иероглифы

from turtleru import *
import math

TIC = 3 # small pause in sec
TAC = 5 # big pause in sec

def test_oop() :
    ч = Черепаха()   # сделали черепаху, назвали черепаху t
    # ч.вид("черепаха")     # как черепаха выглядит

    ч.вперед(75)         # вперед 75
    ч.лево(90)            # поворот налево на 90 градусов
    # ч.цветлинии('синий')    # рисовать линии синим цветом
    ч.вперед(75)         # вперед 75

    конец()

def sq(длина):
    for i in range(4):
      вперед(длина)
      лево(90)
    
def test0():
    вперед(75)         # вперед 75
    право(90)
    назад(175)         # вперед 75
    лево(90)
    вперед(75)         # вперед 75
    жди(TIC)
    
def test_color():
    стереть()
    a = 80
    
    цвет('синий')      # рисовать линии и черепаху синим цветом
    assert False == красить()
    будемКрасить()
    assert True == красить()
    sq(a)
    заКрасили()
    assert False == красить()
    лево(90)
    
    цвет('красный', "желтый")
    будемКрасить()
    sq(a)
    заКрасили()
    лево(90)
    
    цветПера("черный")
    цветЗакраски("зеленый")
    будемКрасить()
    sq(a)
    заКрасили()
    лево(90)
    
    жди(TIC)
    return 
    
    
    t.color(50, 193, 143)  # don't work!
    цвет(50, 193, 143)  # 
    вперед(75)         # вперед 75

    цвет((50, 193, 143))  # 
    вперед(75)         # вперед 75

    цвет((0, 0, 255), (255, 0, 0))  # 
    вперед(75)         # вперед 75

def test_visibility() :
    стереть()
    спрячь()
    assert False == видно()
    жди(TIC)
    покажись()
    assert True == видно()

def test_xy():
    стереть()
    assert 0 == мойХ()
    assert 0 == мойУ()
    assert (0,0) == где()
    
    встатьНа(100, 50)
    assert 100 == мойХ()
    assert 50 == мойУ()
    assert (100,50) == где()
    
    Х(120)
    assert (120,50) == где()
    
    У(-20)
    assert (120,-20) == где()

def test_head():
    стереть()
    assert 0 == куда()
    assert 0 == угол(100,0)
    курс(90)
    assert 90 == куда()
    assert 0 == угол(100,0)
    
    встатьНа(70, 100)
    домой()
    assert 0 == куда()
    assert (0,0) == где()

    assert 0 == угол(100,0)
    assert 90 == угол(0,100)
    assert 315 == угол(100,-100)

    курс(45)
    assert 0 == угол(100,0)
    assert 90 == угол(0,100)
    assert 315 == угол(100,-100)
    
    встатьНа(50, 100)
    assert 0 == угол(100,100)
    assert 180 == угол(0,100)
    assert 270 == угол(50,-100)

    встатьНа(50, 100)
    assert 0 == расстояние(50, 100)
    assert 200 == расстояние(50, -100)
    assert 100 == расстояние(150, 100)
   
    assert 0 == длина(50, 100)
    assert 200 == длина(50, -100)
    assert 100 == длина(150, 100)
    
def test_degrees_radians() :
    стереть()
    домой()
    лево(90)
    assert 90 == курс()
    
    вГрадусы(400)
    assert 100 == курс()
    
    вГрадусы(360)
    assert 90 == курс()
    
    вРадианы()
    assert math.abs(курс() - math.pi/2) < 0.0001
    
def test_pen() :
    стереть()
    
    assert 1 == толщина()
    толщина(3)
    assert 3 == толщина()
    
    пероВниз()
    assert True == опущено()
    вперед(100)
    
    пероВверх()
    assert False == опущено()
    вперед(50)
    
    пероВниз()
    assert True == опущено()
    вперед(100)
    
    встатьНа(250, 10)
    лево(90)
    
    перо(fillcolor="black", pencolor="red", pensize=10)
    p = перо()
    assert 10 == толщина()
    assert 'red' == цветПера()
    assert 'black' == цветЗакраски()
    
    будемКрасить()
    sq(100)
    заКрасили()
    
    
def test() :
    начало()
    
    # test0()
    # test_color()  
    # test_visibility()
    # test_xy()
    # test_head()
    test_pen()

    конец()
    
if __name__ == '__main__':
    test()
